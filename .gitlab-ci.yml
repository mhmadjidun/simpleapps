stages:
  - build
  - deploy

variables:
  GIT_SHA: ${CI_COMMIT_SHORT_SHA}
  BRANCH_NAME: ${CI_COMMIT_REF_NAME}
  IMAGE_TAG: ${CI_COMMIT_REF_NAME}
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_NAME: flazhost/kubenode

build:
  stage: build
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""    
  before_script:
    - apk add --no-cache curl
    - curl -fsSL https://unofficial-builds.nodejs.org/download/release/v16.13.0/node-v16.13.0-linux-x64-musl.tar.xz | tar -xJ -C /usr/local --strip-components=1 --no-same-owner
    - apk add --no-cache npm
  script:
    - npm config set unsafe-perm true
    - npm install
    - npx prisma generate
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" $DOCKER_REGISTRY
    - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$IMAGE_TAG .
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  image: alpine:3.12
  before_script:
    - apk add --no-cache bash curl
    - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p /root/.kube
    - echo "$KUBE_CONFIG"  > /root/.kube/config
    - export KUBECONFIG=/root/.kube/config
    - echo "KUBERNETES_SERVER => $KUBERNETES_SERVER"
    - echo "DOCKER_USERNAME => $DOCKER_USERNAME"
    - echo "DOCKER_PASSWORD => $DOCKER_PASSWORD"
    - echo "DOCKER_EMAIL => $DOCKER_EMAIL"    
  script:
    - kubectl get nodes
    - kubectl create namespace kubenode || true
    - kubectl create secret docker-registry authdockerhub --docker-server=https://index.docker.io/v1/ --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=$DOCKER_EMAIL -n kubenode --dry-run=client -o yaml | kubectl apply -f -
    - kubectl create secret generic app-secrets --from-literal=database_url=$DATABASE_URL -n kubenode --dry-run=client -o yaml | kubectl apply -f -
    - kubectl apply -f kubernetes/kubenode-deployment.yaml
    - kubectl apply -f kubernetes/kubenode-service.yaml
